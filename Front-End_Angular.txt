1. angular kurulu değilse:

	npm install -g @angular/cli

   komutunu VS-Code terminalde çalıştırarak kur.

2. Proje klasörünü oluştur. cd kullanarak terminalde klasöre yerleş.
3. ng new _projeadı_ komutu ile projeyi oluştur.
4. ng serve --open ile yayına alabilirsin
5. Eğer başkasının githubından indirirsen npm install ile node_modules kurulur. Çünkü github atılırken node_modules gönderilmez.
6. .ts dosyasındaki @Component kısmı datayı yöneten yer
     selector: html tagi
     templateUrl : hangi html i yönetiyorsun

7. ./ yol olarak aynı klasörü ifade eder
8. satır sonuna ; koymak zorunlu değil
9. Tek tırnak da çift tırnak da çalışır
10. ts deki değişkeni html de {{title}} şeklinde yazarak kullanabiliyoruz
11. JavaScript case sensitive dir.
12. *ngFor direktifi bunu tekrarla demek
           <li *ngFor="let product of products">{{product.productName}}</li>
    buradaki let ==> var karşılığı, değişken tanımlama keywordu
13. Component ekleme için components klasöründe sağ tıkla Open In Integrated Terminal de:
    terminal satırında : ng g component product
    çalıştır.
14. npm install bootstrap ile bootstrap kur
15. angular.json dosyasındaki 30. satırdaki styles kısmına "./node_modules/bootstrap/dist/css/bootstrap.min.css" ekle
16. yeni paket kurduktan sonra terminal node penceresinde ctrl+c ile stoplayıp tekrar ng serve --open ile yayına al
17. bracket: kodlamayı renklendirme aracı    prettier code formatter: kod formatlayıcı
18. npm install bootstrap@5.0.0-beta2
19. creative-tim.com şablon sitesi
20. JS de public yerine export kullanılıyor
21. app altında models klasörü oluşturulup buraya obje interfaceleri hazırlanıyor

export interface Product {
  productId: number;
  categoryId: number;
  productName: string;
  unitsInStock: number;
  unitPrice: number;
}

22. servis oluşturmak için : ng g service product
23. 

0. ResponseModel oluşturuyoruz
1. Sınıfın interfaceini oluşturuyoruz
2. Sınıfın ResponeModelini oluşturuyoruz
3. ng g service category --skipTests ile servis oluşturuyoruz
4. service.ts dosyasını

import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { ListResponseModel } from '../models/ListResponseModel';
import { Category } from '../models/category';

@Injectable({
  providedIn: 'root',
})
export class CategoryService {
  apiUrl = 'https://localhost:44378/api/categories/getall';

  constructor(private httpClient: HttpClient) {}

  getProducts(): Observable<ListResponseModel<Category>> {
    return this.httpClient.get<ListResponseModel<Category>>(this.apiUrl);
  }
}

yapıyoruz.

5. category componente gel, düzenle
6. html i yaz
7. routing: app-routing.module.ts içinde yapılıyor
8. tip tanımlamada new gereği olmaması için (initialize gerekmesin diye) tsconfig.json dosyasında

    "strict": true,

altına

    "strictPropertyInitialization": false,
"strictNullChecks": false,
koy

9. dataaccess business api =>kod yazma sıralaması
10.dropdown çalışması için jquery lazım

npm install jquery

sonra angular.json styles altına scripts: altına kodları yaz

PIPE: elimi<deki veriyi görsel olarak farklılaştırmak için kullanılır
pipe klasörü oluştur
yerleş
ng g pipe vatAdded

| işareti ile
|uppercase
 <td>{{ product.productName |uppercase}}</td> ürün adları büyük harfle gösterilir


[(ngModel)]="filterText"  banana notation ile two way binding yapılır

two way binding için app.module.ts içinde 

import { FormsModule } from '@angular/forms'; 

şeklinde import etmek gerekiyor.

return filterText
      ? value.filter(
          (p: Product) =>
            p.productName.toLocaleLowerCase().includes(filterText) == true
        )
      : value;

return filterText
      ? value.filter(
          (p: Product) =>
            p.productName.toLocaleLowerCase().indexof(filterText) !== -1
        )
      : value;



MESAJ ürününü yüklemek için:

npm install ngx-toastr
npm install @angular/animations

angular.json a styles altına
"./node_modules/ngx-toastr/toastr.css" ekle

app.module.ts e 
import { ToastrModule } from 'ngx-toastr';
ekle
app.module.ts i
imports: [
    BrowserModule,
    AppRoutingModule,
    HttpClientModule,
    FormsModule,
    ToastrModule.forRoot({ positionClass: 'toast-bottom-right}' }),
  ],
haline getir.

componentte:
 constructor(
    private productService: ProductService,
    private activatedRoute: ActivatedRoute,
    private toastrService: ToastrService
  ) {}

yapıp kullanabilirsin.



